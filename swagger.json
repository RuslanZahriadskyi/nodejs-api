{
  "openapi": "3.0.0",
  "info": {
    "title": "ContactsAPI",
    "description": "Created by [Ruslan Zahriadskyi](https://github.com/RuslanZahriadskyi)",
    "version": "1.0.0"
  },
  "consumens": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "contacts",
      "description": "Your Contacts"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "servers": [
    { "url": "https://own-contacts.herokuapp.com" },
    { "url": "http://localhost:3000" }
  ],
  "paths": {
    "/api/contacts/{contactId}": {
      "get": {
        "tags": ["contacts"],
        "summary": "Get Contact By Id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "contact identificator",
            "required": "true",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": ["contacts"],
        "summary": "Change Contact",
        "security": [{ "Bearer": [] }],
        "parameters": {
          "name": "contactId",
          "in": "path",
          "description": " contact identificator",
          "required": true,
          "schema": { "type": "integer" }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Change name user",
                    "description": "Name",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "example": "Change user email",
                    "description": "Email",
                    "required": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": ["contacts"],
        "summary": "Delete Contact",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "contact identificator",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": ["contacts"],
        "summary": "Change Contact Status",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "contact identificator",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["favorite"],
                "properties": {
                  "favorite": {
                    "type": "boolean",
                    "example": true,
                    "description": "Favorite"
                  }
                }
              }
            }
          },
          "required": true
        },

        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/contacts": {
      "get": {
        "tags": ["contacts"],
        "summary": "Get All User Contacts",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": ["contacts"],
        "summary": "Create New Contact",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New user name",
                    "description": "Name"
                  },
                  "email": {
                    "type": "string",
                    "example": "New user email",
                    "description": "Email"
                  },
                  "password": {
                    "type": "string",
                    "example": "New user password",
                    "description": "Password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "creat"
          }
        }
      }
    },
    "/api/users/registration": {
      "post": {
        "tags": ["user"],
        "summary": "Register new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "name"],
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "some password",
                    "description": "Password"
                  },

                  "name": {
                    "type": "string",
                    "example": "some name",
                    "description": "Name"
                  },
                  "subscription": {
                    "type": "string",
                    "example": "some subscription",
                    "description": "Subscription"
                  },
                  "email": {
                    "type": "string",
                    "example": "some email",
                    "description": "Email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success"
          },
          "500": {
            "description": "Iternal server"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["user"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "some password",
                    "description": "Password"
                  },

                  "email": {
                    "type": "string",
                    "example": "some email",
                    "description": "Email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login user success"
          },
          "401": {
            "description": "Invaid credincials"
          },
          "500": {
            "description": "Iternal server"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["user"],
        "summary": "Get Current User",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad request" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Iternal server" }
        }
      }
    },
    " /api/users/": {
      "post": {
        "tags": ["user"],
        "summary": "Change user subscription",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["subscription"],
                "properties": {
                  "subscription": {
                    "type": "string",
                    "example": "starter or pro or business",
                    "description": "Subscription"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad request" },
          "403": { "description": " Forbidden" },
          "500": { "description": " Iternal server" }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "tags": ["user"],
        "summary": "Repeatedly UserVerify",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "email@example.com",
                    "description": "Email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Success" },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Iternal server" }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["user"],
        "summary": "Logout user",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad request" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Iternal server" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
